.DS_Store

var saveButtonElement = $('#save-btn');
var getTime = $('#currentDay');
/* ORIGINAL ATTEMPT 
//I thought declaring the myTime variable would get the dayjs into the header when it was called in the following function.
var myTime = $('#currentDay');
$(function () {
    var workin9To5 = ['9am', '10am', '11am', '12pm', '1pm', '2pm', '3pm', '4pm', '5pm' n n]
    myTime = dayjs().format('dddd, MMMM D YYYY, h:mm:ss')
    if (myTime === workin9To5)
        $.addClass('#present');
    else if (myTime > workin9To5)
        $.addClass('#past');
    else (myTime < workin9To5)
        $.addClass('#future');

}
// ATTEMPT 2
function getTime() {
var myTime = Date.now();
var calenderTime = dayjs().format('dddd, MMMM D YYYY, h:mm:ss');
if (myTime === calenderTime) {
    $.addClass('#present');
} 
else if (myTime >= calenderTime || myTime <= calenderTime)
        $.addClass('#past') || $.addClass('#future'); {
return 
    }
}*/


Taken out of README
 My original thought when I was making my first two attempts in Javascript was to use something like the 'option value' to make a list and have the user manually confirm whether or not the time was passed present or future but that stemmed mostly from a nervousness around dayJS and date.now. After working on this project more I'm pretty sure I was wandering way off course with original idea. That being said as off as I was about my first thoughts on how to complete the challenge I think being able to use bootstrap to change simple parts like making the css recognize the current hour as alert and so on. 

STARTER CODE/NOTES



    <!-- Use class for "past", "present", and "future" to apply styles to the
        time-block divs accordingly. The javascript will need to do this by
        adding/removing these classes on each div by comparing the hour in the
        id to the current hour. The html provided below is meant to be an example
        demonstrating how the css provided can be leveraged to create the
        desired layout and colors. The html below should be removed or updated
        in the finished product. Remember to delete this comment once the
        code is implemented.
     
       Example of a past time block. The "past" class adds a gray background color.
      <ul> 
      <li id="hour-9" class="row time-block">
        <div class="col-2 col-md-1 hour text-center py-3">9AM</div>
        <textarea class="col-8 col-md-10 description" rows="3"> </textarea>
        <button class="btn saveBtn col-2 col-md-1" aria-label="save">
          <i class="fas fa-save" aria-hidden="true"></i>
        </button>
    </li>

    Example of a a present time block. The "present" class adds a red background color.
      <li id="hour-10" class="row time-block">
        <div class="col-2 col-md-1 hour text-center py-3">10AM</div>
        <textarea class="col-8 col-md-10 description" rows="3"> </textarea>
        <button class="btn saveBtn col-2 col-md-1" aria-label="save">
          <i class="fas fa-save" aria-hidden="true"></i>
        </button>
    </li>
    
    Example of a future time block. The "future" class adds a green background color. 
      <li id="hour-11" class="row time-block">
        <div class="col-2 col-md-1 hour text-center py-3">11AM</div>
        <textarea class="col-8 col-md-10 description" rows="3"> </textarea>
        <button class="btn saveBtn col-2 col-md-1" aria-label="save">
          <i class="fas fa-save" aria-hidden="true"></i>
        </button>
    </li>

    <li id="hour-12" class="row time-block">
        <div class="col-2 col-md-1 hour text-center py-3">12PM</div>
        <textarea class="col-8 col-md-10 description" rows="3"> </textarea>
        <button class="btn saveBtn col-2 col-md-1" aria-label="save">
          <i class="fas fa-save" aria-hidden="true"></i>
        </button>
    </li>

    <li id="hour-1" class="row time-block">
        <div class="col-2 col-md-1 hour text-center py-3">1PM</div>
        <textarea class="col-8 col-md-10 description" rows="3"> </textarea>
        <button class="btn saveBtn col-2 col-md-1" aria-label="save">
          <i class="fas fa-save" aria-hidden="true"></i>
        </button>
    </li>

    <li id="hour-2" class="row time-block">
        <div class="col-2 col-md-1 hour text-center py-3">2PM</div>
        <textarea class="col-8 col-md-10 description" rows="3"> </textarea>
        <button class="btn saveBtn col-2 col-md-1" aria-label="save">
          <i class="fas fa-save" aria-hidden="true"></i>
        </button>
    </li>

    <li id="hour-3" class="row time-block">
        <div class="col-2 col-md-1 hour text-center py-3">3PM</div>
        <textarea class="col-8 col-md-10 description" rows="3"> </textarea>
        <button class="btn saveBtn col-2 col-md-1" aria-label="save">
          <i class="fas fa-save" aria-hidden="true"></i>
        </button>
    </li>
    <li id="hour-4" class="row time-block">
        <div class="col-2 col-md-1 hour text-center py-3">4PM</div>
        <textarea class="col-8 col-md-10 description" rows="3"> </textarea>
        <button class="btn saveBtn col-2 col-md-1" aria-label="save">
          <i class="fas fa-save" aria-hidden="true"></i>
        </button>
    </li>
    <li id="hour-5" class="row time-block">
        <div class="col-2 col-md-1 hour text-center py-3">5PM</div>
        <textarea class="col-8 col-md-10 description" rows="3"> </textarea>
        <button class="btn saveBtn col-2 col-md-1" aria-label="save">
          <i class="fas fa-save" aria-hidden="true"></i>
        </button>
    </li>

    </ul> -->

     // Wrap all code that interacts with the DOM in a call to jQuery to ensure that
// the code isn't run until the browser has finished rendering all the elements
// in the html.

    /*TODO: Add a listener for click events on the save button. This code should
     use the id in the containing time-block as a key to save the user input in
    local storage. HINT: What does `this` reference in the click listener
    function? How can DOM traversal be used to get the "hour-x" id of the
    time-block containing the button that was clicked? How might the id be
    useful when saving the description in local storage?
    */

    
    /* TODO: Add code to apply the past, present, or future class to each time
    block by comparing the id to the current hour. HINTS: How can the id
    attribute of each time-block be used to conditionally add or remove the
    past, present, and future classes? How can Day.js be used to get the
    current hour in 24-hour time?
    */
    
    /* TODO: Add code to get any user input that was saved in localStorage and set
     the values of the corresponding textarea elements. HINT: How can the id
     attribute of each time-block be used to do this?
    */
    
     // TODO: Add code to display the current date in the header of the page.
     

  